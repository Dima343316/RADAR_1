import streamlit as st
import json
from utils import RadarAnalyzer

st.set_page_config(page_title="RADAR News Analyzer", layout="wide")
st.title("üì∞ RADAR - –í—ã—è–≤–ª–µ–Ω–∏–µ –≥–æ—Ä—è—á–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π")


with st.form("event_form"):
    headline = st.text_input(
        "üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–±—ã—Ç–∏—è (headline)",
        "",
        help="–ö—Ä–∞—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–±—ã—Ç–∏—è"
    )

    why_now = st.text_area(
        "üìå –ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ —Å–µ–π—á–∞—Å (why_now)",
        "",
        help="1‚Äì2 —Ñ—Ä–∞–∑—ã –æ –Ω–æ–≤–∏–∑–Ω–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è—Ö –∏ –º–∞—Å—à—Ç–∞–±–µ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö –∞–∫—Ç–∏–≤–æ–≤"
    )

    entities = st.text_input(
        "üè∑ –°—É—â–Ω–æ—Å—Ç–∏ (entities)",
        "",
        help="–ö–æ–º–ø–∞–Ω–∏–∏, —Ç–∏–∫–µ—Ä—ã, —Å—Ç—Ä–∞–Ω—ã –∏–ª–∏ —Å–µ–∫—Ç–æ—Ä–∞, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Å–æ–±—ã—Ç–∏–µ–º (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)"
    )

    sources = st.text_area(
        "üîó –ò—Å—Ç–æ—á–Ω–∏–∫–∏ (sources)",
        "",
        help="3‚Äì5 –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫: –æ—Ä–∏–≥–∏–Ω–∞–ª, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –∞–ø–¥–µ–π—Ç (–ø–æ —Å—Ç—Ä–æ–∫–∞–º)"
    )

    timeline = st.text_area(
        "‚è± –¢–∞–π–º–ª–∞–π–Ω —Å–æ–±—ã—Ç–∏—è (timeline)",
        "",
        help="–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏: –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ‚Üí —É—Ç–æ—á–Ω–µ–Ω–∏–µ"
    )

    dedup_group = st.text_input(
        "üÜî ID –∫–ª–∞—Å—Ç–µ—Ä–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ (dedup_group)",
        "",
        help="–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∞—Å—Ç–µ—Ä–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤/–ø–µ—Ä–µ–ø–µ—á–∞—Ç–æ–∫"
    )

    submit = st.form_submit_button("‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫")


if submit:
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å–æ–±—ã—Ç–∏—è
    sample_event = {
        "headline": headline,
        "why_now": why_now,
        "entities": [e.strip() for e in entities.split(",") if e.strip()],
        "sources": [s.strip() for s in sources.splitlines() if s.strip()],
        "timeline": [t.strip() for t in timeline.splitlines() if t.strip()],
        "dedup_group": dedup_group
    }

    analyzer = RadarAnalyzer()

    with st.spinner("–ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∫—Ç—ã –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏..."):
        try:
            facts = analyzer.fetch_event_sources(headline)
            st.subheader("üîó –§–∞–∫—Ç—ã –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏")
            st.text(facts)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–æ–≤: {e}")



    with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ—Å—Ç–∞..."):
        try:
            draft = analyzer.generate_draft(sample_event)
            st.subheader("üìù –ß–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ—Å—Ç–∞")
            st.json(draft)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: {e}")


    with st.spinner("–û—Ü–µ–Ω–∏–≤–∞–µ–º –≥–æ—Ä—è—á–µ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è..."):
        try:
            hotness = analyzer.evaluate_hotness(sample_event)
            sample_event["hotness"] = hotness
            st.metric("üî• –ì–æ—Ä—è—á–µ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–∏", hotness)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ –≥–æ—Ä—è—á–µ—Å—Ç–∏: {e}")

    # -------------------------------
    # 4Ô∏è‚É£ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
    # -------------------------------
    st.subheader("üìå –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ (—Å –≥–æ—Ä—è—á–µ—Å—Ç—å—é)")
    st.json(sample_event)
